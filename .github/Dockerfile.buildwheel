#
# Copyright (c) 2025 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# This file is a part of the vllm-ascend project.
#
ARG PY_VERSION=3.11
FROM quay.io/ascend/manylinux:8.2.rc1-910b-manylinux_2_28-py${PY_VERSION}

ARG COMPILE_CUSTOM_KERNELS=1

# Define environments
ENV DEBIAN_FRONTEND=noninteractive
ENV COMPILE_CUSTOM_KERNELS=${COMPILE_CUSTOM_KERNELS}
# Install build tools and GCC 13 toolset to match dev environment
RUN yum update -y && \
    yum install -y python3-pip git vim wget net-tools gcc gcc-c++ make cmake numactl-devel gcc-toolset-13 && \
    rm -rf /var/cache/yum

# Prefer GCC 13 from gcc-toolset-13
ENV GCC_TOOLSET_ROOT=/opt/rh/gcc-toolset-13/root
ENV PATH=${GCC_TOOLSET_ROOT}/usr/bin:${PATH}
ENV LD_LIBRARY_PATH=${GCC_TOOLSET_ROOT}/usr/lib64:${LD_LIBRARY_PATH}
ENV CC=${GCC_TOOLSET_ROOT}/usr/bin/gcc
ENV CXX=${GCC_TOOLSET_ROOT}/usr/bin/g++
ENV CMAKE_C_COMPILER=${GCC_TOOLSET_ROOT}/usr/bin/gcc
ENV CMAKE_CXX_COMPILER=${GCC_TOOLSET_ROOT}/usr/bin/g++

# Ensure absolute calls to /usr/bin/gcc/g++ resolve to GCC 13
RUN alternatives --install /usr/bin/gcc gcc ${GCC_TOOLSET_ROOT}/usr/bin/gcc 100 \
    --slave /usr/bin/g++ g++ ${GCC_TOOLSET_ROOT}/usr/bin/g++ \
    --slave /usr/bin/c++ c++ ${GCC_TOOLSET_ROOT}/usr/bin/g++ && \
    alternatives --set gcc ${GCC_TOOLSET_ROOT}/usr/bin/gcc

# Avoid accidental use of system GCC 8 cross headers/libs (aarch64/x86_64)
# so that builds pick toolset-13 or Ascend toolchain headers instead
RUN rm -rf /usr/lib/gcc/aarch64-redhat-linux/8 || true && \
    rm -rf /usr/lib/gcc/x86_64-redhat-linux/8 || true && \
    rm -rf /usr/include/c++/8 || true

# Ensure Ascend env is visible to all subsequent RUN steps
ENV ASCEND_CANN_PACKAGE_PATH=/usr/local/Ascend/ascend-toolkit/latest

WORKDIR /workspace

COPY . /workspace/vllm-ascend/

# Install req
RUN python3 -m pip install -r vllm-ascend/requirements.txt --extra-index https://download.pytorch.org/whl/cpu/ && \
    python3 -m pip install twine

# Install vllm-ascend
RUN source /usr/local/Ascend/ascend-toolkit/set_env.sh && \
    source /usr/local/Ascend/nnal/atb/set_env.sh && \
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/Ascend/ascend-toolkit/latest/`uname -i`-linux/devlib && \
    cd vllm-ascend && \
    python3 setup.py bdist_wheel && \
    ls -l dist 

CMD ["/bin/bash"]
