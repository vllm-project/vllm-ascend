#
# Copyright (c) 2025 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# This file is a part of the vllm-ascend project.

# This test will be triggered:
# 1. PR labeled with: '*accuracy-test' (ONLY 1 label valid) & 'ready-for-test'
# 2. workflow_dispatch with models input
# See detail rule in strategy.matrix note
name: Benchmarks / accuracy / new

on:
  schedule:
    # Runs every 6 hours
    - cron:  '0 */6 * * *'
  # Remove this
  push:
    branches: [ acc-test ]
  pull_request:
    types: [ labeled ]
  workflow_dispatch:
    inputs:
      vllm-ascend-version:
        description: 'vllm-ascend:'
        required: true
        type: choice
        # Please also update this when bump matched version
        # Current supported vLLM versions
        options:
          - latest
          - main
        default: main

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

# only cancel in-progress runs of the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  accuracy_tests:
    # test will be triggered when tag '*-accuracy-test' & 'ready-for-test' or workflow_dispatch job
    if:  >-
      ${{
      contains(github.event.pull_request.labels.*.name, 'accuracy-new-test') &&
      contains(github.event.pull_request.labels.*.name, 'ready-for-test') ||
      github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
      }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - model_name: Qwen3-8B-Base
            runner: linux-aarch64-a2-1
          - model_name: Qwen2.5-VL-7B-Instruct
            runner: linux-aarch64-a2-1
      fail-fast: false
      
    name: ${{ matrix.model_name }} accuracy
    container:
      image: swr.cn-southwest-2.myhuaweicloud.com/base_image/ascend-ci/cann:8.2.rc1-910b-ubuntu22.04-py3.11
      env:
        DATASET_SOURCE: ModelScope
        VLLM_USE_MODELSCOPE: True
        USE_MODELSCOPE_HUB: 1
        # 1. If version specified (work_dispatch), do specified branch accuracy test
        # 2. If no version (labeled PR), do accuracy test by default ref:
        # The branch, tag or SHA to checkout. When checking out the repository that
        # triggered a workflow, this defaults to the reference or SHA for that event.
        # Otherwise, uses the default branch.
        GHA_VLLM_ASCEND_VERSION: ${{ github.event.inputs.vllm-ascend-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Resolve vllm-ascend version
        run: |
          VERSION_INPUT="${{ github.event.inputs.vllm-ascend-version }}"
          
          if [[ "$VERSION_INPUT" == "latest" ]]; then
            TAGS=$(git ls-remote --tags --sort=-v:refname https://github.com/vllm-project/vllm-ascend "v*" | cut -f2 | sed 's|refs/tags/||')
            LATEST_TAG=$(echo "$TAGS" | head -n1)
            if [[ -z "$LATEST_TAG" ]]; then
              RESOLVED_VERSION="main"
            else
              RESOLVED_VERSION="$LATEST_TAG"
            fi
          else
            RESOLVED_VERSION="$VERSION_INPUT"
          fi
          echo "GHA_VLLM_ASCEND_VERSION=$RESOLVED_VERSION" >> $GITHUB_ENV

      - name: Check npu and CANN info
        run: |
          npu-smi info
          cat /usr/local/Ascend/ascend-toolkit/latest/"$(uname -i)"-linux/ascend_toolkit_install.info

      - name: Config mirrors
        run: |
          sed -Ei 's@(ports|archive).ubuntu.com@cache-service.nginx-pypi-cache.svc.cluster.local:8081@g' /etc/apt/sources.list
          pip config set global.index-url http://cache-service.nginx-pypi-cache.svc.cluster.local/pypi/simple
          pip config set global.trusted-host cache-service.nginx-pypi-cache.svc.cluster.local
          apt-get update -y
          apt install git -y

      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GHA_VLLM_ASCEND_VERSION }}

      - name: Install system dependencies
        run: |
          apt-get -y install `cat packages.txt`
          apt-get -y install gcc g++ cmake libnuma-dev

      - name: Checkout vllm-project/vllm repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm
          ref: v0.10.0
          path: ./vllm-empty

      - name: Install vllm-project/vllm from source
        working-directory: ./vllm-empty
        run: |
          VLLM_TARGET_DEVICE=empty pip install -e .

      - name: Install vllm-project/vllm-ascend
        env:
          PIP_EXTRA_INDEX_URL: https://mirrors.huaweicloud.com/ascend/repos/pypi
        run: |
          pip install -r requirements-dev.txt
          pip install -v -e .

      - name: Run accuracy test
        env:
          VLLM_WORKER_MULTIPROC_METHOD: spawn
          VLLM_USE_MODELSCOPE: True
        run: |
          cd tests/e2e/singlecard/models/
          pip install lm-eval==0.4.8
          pytest -sv test_lm_eval_correctness.py --config configs/${{ matrix.model_name }}.yaml
